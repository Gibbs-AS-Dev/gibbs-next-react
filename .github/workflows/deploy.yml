name: Deploy Next.js to Gibbs (Zero Downtime)

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build & Deploy Next.js (Docker)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy Code to Server (Rsync)
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzh --exclude=".next" --exclude=".git" --exclude="node_modules"
          path: ./
          remote_path: /var/www/vhosts/dev.gibbs.no/nextjs.dev.gibbs.no
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.DEV_USERNAME }}
          remote_password: ${{ secrets.DEV_PASSWORD }}  # Use password authentication

      - name: Execute Remote SSH Commands (With Password)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PASSWORD }}  # Use password authentication
          script: |
            echo "üöÄ Deploying Next.js app with Docker Compose..."
            
            cd /var/www/vhosts/dev.gibbs.no/nextjs.dev.gibbs.no
            echo "üõ† Pulling latest changes..."
            git pull origin main || echo "‚ö†Ô∏è Git pull failed, skipping..."
            
            echo "üîÑ Starting new container before stopping old one..."
            docker compose up -d --build
            
            echo "üöÄ Ensuring zero downtime..."
            OLD_CONTAINER=$(docker ps -q --filter "name=nextjs_app_old")
            if [ ! -z "$OLD_CONTAINER" ]; then
              echo "üßπ Stopping old container..."
              docker stop $OLD_CONTAINER
              docker rm $OLD_CONTAINER
            fi
            
            echo "‚úÖ Deployment complete!"
            docker compose ps
